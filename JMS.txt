1. MOM - Message Oriented Middleware: This is the central server where the messages are sent ex- Apache ActiveMQ
2. JMS it is a common interface for communicating with MOM prior to this we had to use the vendor specific methods
3. Oracle gives JMS specifications for the MOM vendors to implement and APIs for the developer to interact with MOMs
4. Current version JMS 2.0. Using MOM we can communicate with Heterogenous systems.
5. JMS allows asynchronous communication
6. Two messaging model:
    a. Point to Point
      . We can uses queues from one to another node
      . This can be synchronous or asynchronous
      . The message is consumed by only one time post that it will be deleted
    b. Publish/Subscribe
      . The message is published to a topic
      . The same message can be received by multiple subscribed
      . Sent to all the subscribers of that topic
7. JMS providers are MOM - Apache ActiveMQ Artemis. This is an open source
8. MOMs create Queues, Topic, Connection factory for us and put them in a JNDI registry from where we can access the Administrated objects
9. There are 7 parts to a MOMs
    a. Connection factory: Which helps to get Connection
    b. Destination: It can be a Topi or Queue
    c. Session: Single unit of work
    d. Message
    e. message producer
    f. message consumer
    g. JNDI: The connection factory creates the destination and registers to the JNDI
10. If only we want to read messages in the Queue we use the QueueBrowser. This will just read and not consume
11. QueueBrowser gives the enumeration on the messages in the Queue that will still be intact

          JMS 2.0
12. JMS context = JMS connection + JMS Session
